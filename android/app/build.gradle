plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def signingPropertiesFile = rootProject.file("../signing.properties")
println("Signing properties file path: " + signingPropertiesFile.absolutePath)

def signingProperties = new Properties()
if (signingPropertiesFile.exists()) {
    signingProperties.load(new FileInputStream(signingPropertiesFile))
} else {
    println("signing.properties not found. Using default signing config.")
}

android {
    namespace = "de.wve.zaehlerstand"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    dependencies {
        implementation "androidx.security:security-crypto:1.1.0-alpha03"
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "de.wve.zaehlerstand"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    signingConfigs {
        release {
            if (signingPropertiesFile.exists()) {
                storeFile file(signingProperties['storeFile'])
                storePassword signingProperties['storePassword']
                keyAlias signingProperties['keyAlias']
                keyPassword signingProperties['keyPassword']
            } else {
                // Handle the case where the properties file doesn't exist.
                // This is important for CI/CD environments where you might
                // use environment variables instead.
                println("signing.properties not found. Using default signing config.")
            }
        }
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.release
        }
    }
}

flutter {
    source = "../.."
}
